/*
 * Minimal object storage library, (C) 2015 Minio, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'pmd'
apply plugin: 'maven'
apply plugin: 'signing'

ext.junitVersion = '4.12'
ext.googleHttpClientVersion = '1.20.0'
ext.jodaTimeVersion = '2.7'

ext.deployUsername = ''
if(project.properties.containsKey('ossrhUsername')) {
    ext.deployUsername = ossrhUsername
}

ext.deployPassword = ''
if(project.properties.containsKey('ossrhPassword')) {
    ext.deployPassword = ext.ossrhPassword
}

group = 'io.minio'
archivesBaseName = 'minio'
version = '0.1.0'

sourceCompatibility = 1.6
targetCompatibility = 1.6

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

dependencies {
    compile group: 'com.google.http-client', name: 'google-http-client', version: googleHttpClientVersion
    compile group: 'com.google.http-client', name: 'google-http-client-xml', version: googleHttpClientVersion
    compile group: 'joda-time', name: 'joda-time', version: jodaTimeVersion

    testCompile group: 'junit', name: 'junit', version: junitVersion
}

repositories {
    mavenCentral()
    mavenLocal()
}

if(!org.gradle.internal.jvm.Jvm.current().toString().startsWith("1.6.0_")){
    apply plugin: 'findbugs'
    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    if(project.properties.containsKey('signing.keyId')) {
        sign configurations.archives
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }


            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: deployUsername, password: deployPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: deployUsername, password: deployPassword)
            }

            pom.project {
                name 'minio'
                packaging 'jar'

                description 'Minimal object storage library for the Java programming language'
                url 'https://github.com/minio/minio-java'

                scm {
                    connection 'scm:git:git@github.com:minio/minio-java.git'
                    developerConnection 'scm:git:git@github.com:minio/minio-java.git'
                    url 'http://github.com/minio/minio-java'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'minio'
                        name 'Minio Inc.'
                        email 'dev@minio.io'
                    }
                }
            }
        }
    }
}

/*
 * Minio Java Library for Amazon S3 Compatible Cloud Storage, (C) 2015 Minio, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '1.2.2'
  id 'checkstyle'
  id 'pmd'
  id 'maven'
  id 'signing'
  id 'findbugs'
}

compileJava {
  options.fork = true
}

ext.junitVersion = '4.12'
ext.googleHttpClientVersion = '1.20.0'
ext.googleGuavaVersion = '18.0'
ext.okHttpClientVersion = '2.7.2'
ext.okioVersion = '1.6.0'
ext.jodaTimeVersion = '2.7'
ext.apacheCommonsValidatorVersion = '1.5.0'

ext.deployUsername = ''
if (project.properties.containsKey('ossrhUsername')) {
  ext.deployUsername = ossrhUsername
}

ext.deployPassword = ''
if (project.properties.containsKey('ossrhPassword')) {
  ext.deployPassword = ext.ossrhPassword
}

group = 'io.minio'
archivesBaseName = 'minio'
version = '2.0.0'

sourceCompatibility = 1.7
targetCompatibility = 1.7

task wrapper(type: Wrapper) {
  gradleVersion = '2.5'
}

[compileJava, compileTestJava].each() {
  it.options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation", "-Xlint:-options"]
  it.options.encoding = "UTF-8"
}

dependencies {
  compile group: 'com.google.http-client', name: 'google-http-client-xml', version: googleHttpClientVersion
  compile group: 'com.google.guava', name: 'guava', version: googleGuavaVersion
  compile group: 'com.squareup.okhttp', name: 'okhttp', version: okHttpClientVersion
  compile group: 'com.squareup.okhttp', name: 'mockwebserver', version: okHttpClientVersion
  compile group: 'com.squareup.okio', name: 'okio', version: okioVersion
  compile group: 'joda-time', name: 'joda-time', version: jodaTimeVersion
  compile group: 'commons-validator', name: 'commons-validator', version: apacheCommonsValidatorVersion

  testCompile group: 'junit', name: 'junit', version: junitVersion
}

repositories {
  mavenCentral()
  mavenLocal()
}

checkstyle {
  configFile = file("$rootDir/checkstyle.xml")
  toolVersion = "6.5"
  ignoreFailures = true
  if (rootProject.hasProperty("checkstyle.ignoreFailures")) {
    ignoreFailures = rootProject.properties["checkstyle.ignoreFailures"].toBoolean()
  }
}

checkstyleMain {
  source = fileTree(dir: "src/main", include: "**/*.java")
}

checkstyleTest {
  source = fileTree(dir: "src/test", include: "**/*.java")
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allJava
}

task javadocJar (type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

task localeTest (type: Test) {
  description = "Runs tests with locale"
  System.setProperty('user.language', 'de')
  System.setProperty('user.country', 'DE')
  systemProperties = System.properties
  dependsOn test
}

check.dependsOn localeTest

javadoc.options {
  encoding = 'UTF-8'
  links 'https://docs.oracle.com/javase/8/docs/api/'
}

// Disable JavaDoc doclint on Java 8. It's annoying.
if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}

artifacts {
  archives javadocJar, sourcesJar, shadowJar
}

signing {
  if (project.properties.containsKey('signing.keyId')) {
    sign configurations.archives
  }
}

// At a test failure, log the stack trace to the console so that we don't
// have to open the HTML in a browser.
test {
  testLogging {
    exceptionFormat = 'full'
    showExceptions true
    showCauses true
    showStackTraces true
  }
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: deployUsername, password: deployPassword)
      }
      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: deployUsername, password: deployPassword)
      }
      pom.project {
        name 'minio'
        packaging 'jar'
        description 'Minio Java Library for Amazon S3 Compatible Cloud Storage'
        url 'https://github.com/minio/minio-java'
        scm {
          connection 'scm:git:git@github.com:minio/minio-java.git'
          developerConnection 'scm:git:git@github.com:minio/minio-java.git'
          url 'http://github.com/minio/minio-java'
        }
        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id 'minio'
            name 'Minio Inc.'
            email 'dev@minio.io'
          }
        }
      }
    }
  }
}

jar {
  manifest {
    attributes('Implementation-Title': archivesBaseName,
    'Implementation-Version': version,
    'Built-By': System.getProperty('user.name'),
    'Built-JDK': System.getProperty('java.version'),
    'Source-Compatibility': sourceCompatibility,
    'Target-Compatibility': targetCompatibility)
  }
}
